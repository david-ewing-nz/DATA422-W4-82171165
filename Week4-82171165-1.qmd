---
title: "Week 4 - Imputation"
author: "David Ewing (82171165)"
date: "2024-08-05"
format: pdf
editor: visual
header-includes:
  - \usepackage{placeins}
  - \usepackage{afterpage}
---
---

```{r setup, echo=FALSE}
# libraries
suppressPackageStartupMessages({
  library(knitr)
  library(tidyverse)
  library(kableExtra)
  library(broom)
  library(mice)
  knitr::opts_chunk$set(echo = TRUE)
})

#tinytex::tinytex_root()
```

## Introduciton - Imputation Tecnique

Imputation is a common Data Engineering Technique for cleaning up data. This report is the results of a lab that compares accuracy of different imputation techniques.

A client representing the Green Party collected data about the Cannabis referendum in 2020. They wish to know from their data if it is worth pursuing a citizen initiated referendum in the next election cycle.This report is to address the following:

-   What proportion of people in the sample supported legalisation?
-   Who in the sample supported legalisation?

This report os organised as follows:

-   Table on missingness
-   Visualisation on demographics
-   Inline reporting of proportions
-   Tables of each logistic regression
-   A clear conclusion
-   Extra for experts for those game enough

## Data (and Table on Missingness)

The data is a provided csv file containing : "Referendum Survey Lab Version". This CSV file containing survey responses with Age, Gender, and whether someone voted yes (1) or no (0) in the referendum. There was a considerable amount of missingness in the data. It is 
believed this is because some people, particularly younger people, were reluctant to give their
voting preference.


```{r load-data, echo=FALSE, message=FALSE, warning=FALSE}
csv_file <- "data/referendum_survey_lab_version.csv"

#df_csv <- read_csv(csv_file)
df_csv <- read_csv(csv_file, show_col_types = FALSE)

# display head
#head(df_csv)
```

```{r table-does-not-split, echo=FALSE, message=FALSE, warning=FALSE }
df_missingness <- df_csv %>%
  summarise(across(everything(), ~ sum(is.na(.)))) %>%                             # '.' is where pipe puts df_csv 
  pivot_longer(everything(), names_to = "Variable", values_to = "Missing Count")

# Ensure table does not split across a page
kable(df_missingness, caption = "Missingness", longtable = F) %>%
  kable_styling(full_width = F, latex_options = c("hold_position", "scale_down"))

# Add a page break 
#cat("\\afterpage{\\clearpage}")
```
## Visualisation of Demographics
```{r Demographics-Visualisation , echo=FALSE, message=FALSE, warning=TRUE }
# Add a column with labels
df_csv <- df_csv %>%
  mutate(gender_label = recode(gender,
                               "Female" = "A",
                               "Male" = "B",
                               "Genderqueer, neither exclusively male nor female" = "C",
                               "Other (Please State)" = "D",
                               "Transgender Female (Male to Female: MTF)" = "E",
                               "Transgender Male (Female to Male; FTM)" = "F",
                               "NA" = "G"))

# get rid of NA in age 
df_csv_filtered <- df_csv %>%
  filter(!is.na(age))

ggplot(df_csv_filtered, aes(x = age)) +
  geom_histogram(binwidth = 5, position = "dodge") +
  facet_wrap(~ gender_label) +
  theme_minimal() +
  labs(title = "Distribution of Age Across Genders", x = "Age", y = "Count")


legend_data <- data.frame(
  Label = c("A", "B", "C", "D", "E", "F", "G"),
  Description = c("Female", "Male", "Genderqueer, neither exclusively male nor female", "Other (Please State)", "Transgender Female (Male to Female: MTF)", "Transgender Male (Female to Male; FTM)", "NA")
)

kable(legend_data, col.names = c("Label", "Description"), caption = "Gender Legend", longtable = F) %>%
  kable_styling(full_width = F, position = "center", latex_options = c("hold_position"))

```

```{r include=FALSE, echo=FALSE}
# Ensure the gender variable is present in the data
if("gender" %in% colnames(df_csv)) {
  print("The 'gender' variable is present in the dataset.")
} else {
  print("The 'gender' variable is not present in the dataset.")
}
```

```{r include=TRUE, echo=FALSE}
# proportion of ‘yes’ voters
proportion_yes <- mean(df_csv$referendum, na.rm = TRUE)

# Logistic regression for complete cases
ref_model <- glm(referendum ~ age + gender, data = df_csv, family = binomial)
ref_model_tidy <- tidy(ref_model)

# Rename terms
ref_model_tidy$term <- c("(Intercept)", "Age", "Queer (Gender)", "Male", "Other (Gender)", "Transgender Female (MTF)", "Transgender Male (FTM)")

# Round logistic regression results to 2 decimal places
ref_model_tidy <- ref_model_tidy %>%
  mutate(across(where(is.numeric), ~ round(.x, 2))) 

# Display logistic regression results
kable(ref_model_tidy, caption = "logistic regression results",longtable = F) %>%
  kable_styling(full_width = F, latex_options = c("striped", "hold_position"))


```
